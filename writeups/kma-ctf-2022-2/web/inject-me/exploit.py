from flask import Flask, render_template, render_template_string, request
import sqlite3
import re

app = Flask(__name__)
HOST = &#34;0.0.0.0&#34;
PORT = 80
DATABASE = &#34;database/database.db&#34;

def get_db():
    conn = sqlite3.connect(DATABASE)
    conn.row_factory = sqlite3.Row
    return conn

def init_db():
    conn = get_db()
    with open(&#39;database/schema.sql&#39;, &#39;r&#39;) as f:
        conn.executescript(f.read())
    conn.close()
    return

def waf(str):
    if (len(str)) &gt; 85 or &#34;union&#34; in str.lower():
        return False

    black_list = [&#34;&#39;&#34;, &#39;&#34;&#39;, &#39;*&#39;, &#39;\\&#39;, &#39;/&#39;, &#39;#&#39;, &#39;;&#39;, &#39;-&#39;]
    for c in black_list:
        if c in str:
            str = str.replace(c, &#34;&#34;)

    return str

@app.route(&#39;/&#39;)
def home():
   return render_template(&#39;index.html&#39;)

@app.route(&#39;/query&#39;,methods = [&#39;GET&#39;])
def addrec():
    if request.args.get(&#34;query&#34;) != &#34;&#34;:
        query = request.args.get(&#34;query&#34;)
    
    query = waf(query)
    
    if query == False:
        return render_template_string(&#34;Dont cheat my fen =))&#34;)
    else:
        try:
            cur = get_db().execute(&#39;SELECT msg FROM &#39; + query + &#39; where msg like &#34;MSG-%&#34; and msg not like &#34;%KMACTF{%&#34; limit 1&#39;)
            result = cur.fetchall()

            if len(result) == 0:
                return render_template_string(&#34;No result&#34;)

            cur.close()
            return render_template(&#34;index.html&#34;, result = result)
        except:
            return render_template_string(&#34;Something went wrong&#34;)

@app.route(&#39;/source&#39;)
def source():
    source = open(__file__, &#34;r&#34;)
    return render_template(&#34;source.html&#34;, source = source.read())

if __name__ == &#39;__main__&#39;:
    init_db()
    app.run(HOST, PORT, debug=True)